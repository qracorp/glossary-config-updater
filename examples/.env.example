# Environment Configuration for Glossary Configuration Updater
# Copy this file to .env and fill in your actual values

# API Configuration (Required)
API_DOMAIN=api.example.com
API_USERNAME=your_username
API_PASSWORD=your_password
SSL_VERIFY=false

# Default Configuration
DEFAULT_CONFIG_ID=config123
DEFAULT_MERGE_STRATEGY=merge

# Optional: Different environment configurations
DEV_CONFIG_ID=dev-config-456
STAGING_CONFIG_ID=staging-config-789
PROD_CONFIG_ID=prod-config-123

# Optional: API Settings
API_TIMEOUT=30
API_MAX_RETRIES=3

# Optional: Logging and Debug
LOG_LEVEL=INFO
DEBUG_MODE=false

# Optional: File Processing Settings
GLOSSARY_DIRECTORY=./docs/glossary


# Usage Examples:
# 
# 1. Basic usage with environment variables:
#    source .env && glossary-updater --file examples/glossary/sample-terms.csv --config $DEFAULT_CONFIG_ID --domain $API_DOMAIN --username $API_USERNAME --password $API_PASSWORD

#
# 2. Override environment settings:
#    source .env && glossary-updater --file examples/glossary/sample-terms.csv --config $DEFAULT_CONFIG_ID --domain $API_DOMAIN --username $API_USERNAME --password $API_PASSWORD --merge-strategy overwrite
#
# 3. Use in scripts:
#    #!/bin/bash
#    set -a; source .env; set +a
#    glossary-updater --file examples/glossary/sample-terms.csv --config $DEFAULT_CONFIG_ID --domain $API_DOMAIN --username $API_USERNAME --password $API_PASSWORD

